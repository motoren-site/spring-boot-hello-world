name: Build & Push to Digital Ocean Registry
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v1

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: "adopt"
          java-version: "17"
          server-id: ghcr.io

      - name: Login to Digital Ocean Registry
        uses: docker/login-action@v1
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          password: ${{ secrets.DIGITAL_OCEAN_TOKEN }}

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{secrets.CONTAINER_URL}}hello-world:$(echo $GITHUB_SHA | head -c7)

      - name: Set up kubectl
        uses: matootie/dokube@v1.3.4
        with:
          personalAccessToken: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          clusterName: ${{secrets.K8S_CLUSTER_NAME}}

      - name: Update deployment file
        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{secrets.CONTAINER_URL}}hello-world:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml

      - name: Deploy to Kubernetes
        run: kubectl apply -f config/deployment.yml

      - name: Check deplyments Kubernetes
        run: kubectl get deployments --namespace apps

      # - name: Add Hpa
      # run: kubectl autoscale deployment hello-world --cpu-percent=50 --min=2 --max=5 --namespace apps

      - name: Deploy Service
        run: kubectl apply -f config/service.yml

      - name: Deploy Ingress
        run: kubectl apply -f config/ingress.yml

      - name: Check status
        run: kubectl rollout status deployment/hello-world -n apps

      - name: Remove old containers
        uses: ripplr-io/docr-image-remove@v1
        with:
          image_repository: ${{secrets.CONTAINER_URL}}hello-world
          buffer_size: 2
